<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<security:http pattern="/resources/images/**" security="none" />
	<security:http pattern="/resources/scripts/**" security="none" />
	<security:http pattern="/resources/styles/**" security="none" />
	<security:http pattern="/resources/views/**" security="none" />
	<security:http pattern="/resources/bower_components/**" security="none"/>
	<security:http pattern="/resources/unsupportedBrowser.html" security="none"/>
	<security:http pattern="/EIPRedirect" security="none" />
	<security:http pattern="/rest/createCase" security="none" />
	<security:http pattern="/rest/createCase/get" security="none" />
	
	<security:http auto-config='true'>
		<security:intercept-url pattern="/**" access="authenticated" />
		<security:access-denied-handler error-page="/resources/403.html" />
		<security:custom-filter ref="siteMinderFilter"
			position="PRE_AUTH_FILTER" />
		<security:custom-filter ref="csrfHeaderFilter"
			after="CSRF_FILTER" />
		<security:logout success-handler-ref="restLogoutHandler" invalidate-session="true" delete-cookies="JSESSIONID"/>
		<security:csrf token-repository-ref="csrfTokenRepository" request-matcher-ref="csrfSecurityRequestMatcher" />
		<security:headers>
			<security:frame-options policy="SAMEORIGIN" />
		</security:headers>
	</security:http>
			
<!-- 	<security:websocket-message-broker id="interceptor" same-origin-disabled="true"> -->

<!-- 		<security:intercept-message pattern="/ws/**" -->
<!-- 			access="authencicated" /> -->

<!-- 		<security:intercept-message type="CONNECT" -->
<!-- 			access="authencicated" /> -->
<!-- 		<security:intercept-message type="UNSUBSCRIBE" -->
<!-- 			access="authencicated" /> -->
<!-- 		<security:intercept-message type="DISCONNECT" -->
<!-- 			access="authencicated" /> -->
<!-- 		<security:intercept-message type="MESSAGE" -->
<!-- 			access="authencicated" /> -->
<!-- 		<security:intercept-message type="SUBSCRIBE" -->
<!-- 			access="authencicated" /> -->

<!-- 	</security:websocket-message-broker> -->

	<security:global-method-security
		secured-annotations="enabled" pre-post-annotations="enabled">
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>

	<bean id="restLogoutHandler"
		class="com.coface.corp.autonomy.security.AutonomyLogoutSuccessHandler" />

	<bean id="siteMinderFilter"
		class="org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter">
		<property name="principalRequestHeader" value="SM_USER" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="invalidateSessionOnPrincipalChange" value="true" />
		<property name="checkForPrincipalChanges" value="true" />
	</bean>

	<bean id="csrfTokenRepository"
		class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
		<property name="headerName" value="X-XSRF-TOKEN" />
	</bean>

	<bean id="csrfHeaderFilter" class="com.coface.corp.autonomy.security.CsrfHeaderFilter" />
	<bean id="csrfSecurityRequestMatcher" class="com.coface.corp.autonomy.security.CsrfSecurityRequestMatcher" />

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="preAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="preAuthenticationProvider"
		class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService">
			<bean id="userDetailsServiceWrapper"
				class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<property name="userDetailsService" ref="customUserService" />
			</bean>
		</property>
	</bean>
	<bean id="customUserService" class="com.coface.corp.autonomy.security.UserService" />

	<!-- Enable permission evaluator in annotation -->
	<bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="customPermissionEvaluator" />
	</bean>
	<!-- Declare a custom PermissionEvaluator interface -->
	<bean id="customPermissionEvaluator"
		class="com.coface.corp.autonomy.security.AutonomyPermissionEvaluator" />
</beans>
